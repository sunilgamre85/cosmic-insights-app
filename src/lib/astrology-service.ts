// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A service for performing astrological calculations.
 * This file will house the logic for generating Kundli charts by calling a self-hosted sweph-api.
 */

// --- Interfaces for Kundli Data ---

export interface PlanetData {
    name: string;
    degree: number;
    sign: string;
    house: number;
}

export interface Mahadasha {
    dashaLord: string;
    startDate: string;
    endDate: string;
}

export interface YogaData {
    name: string;
    description: string;
}

interface KundliInput {
    date: Date;
    timeOfBirth: string;
    lat: number;
    lon: number;
    timezoneOffset?: number;
}

// --- Hardcoded Data (for fallback/placeholder use) ---

const ZODIAC_SIGNS = [
    'Aries', 'Taurus', 'Gemini', 'Cancer', 'Leo', 'Virgo',
    'Libra', 'Scorpio', 'Sagittarius', 'Capricorn', 'Aquarius', 'Pisces'
];


async function getLatLon(place: string): Promise<{ lat: number, lng: number }> {
    const apiKey = process.env.GOOGLE_MAPS_API_KEY;
    if (!apiKey) {
        console.warn("Google Maps API key not found. Using default coordinates.");
        // Return default coordinates for Mumbai
        return { lat: 19.0760, lng: 72.8777 };
    }
    const res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(place)}&key=${apiKey}`);
    const data = await res.json();
    if (data.status !== 'OK' || !data.results[0]) {
        throw new Error(`Geocoding failed for place: ${place}. Status: ${data.status}`);
    }
    return data.results[0].geometry.location;
};


/**
 * Calculates the core Kundli data by calling the self-hosted sweph-api.
 */
export async function getKundliData({ date, timeOfBirth, placeOfBirth }: { date: Date, timeOfBirth: string, placeOfBirth: string }): Promise<{ascendant: {degree: number, sign: string}, planets: PlanetData[], houseSigns: string[], yogasAndDoshas: YogaData[], mahadashas: Mahadasha[]}> {
  console.log('Fetching Kundli data for:', { date, timeOfBirth, placeOfBirth });
  
  const location = await getLatLon(placeOfBirth);

  const SWEPH_API_URL = process.env.SWEPH_API_URL;
  if(!SWEPH_API_URL) {
      throw new Error("SWEPH_API_URL is not configured in .env file.");
  }
  
  // The API likely needs dob in YYYY-MM-DD format
  const dob = date.toISOString().split('T')[0];

  const res = await fetch(`${SWEPH_API_URL}/api/kundli`, {
    method: 'POST',
    body: JSON.stringify({
      dob, 
      tob: timeOfBirth,
      lat: location.lat,
      lon: location.lng,
      timezoneOffset: +5.5 // Assuming Indian Standard Time for now. This should ideally be calculated.
    }),
    headers: { 'Content-Type': 'application/json' }
  });

  if (!res.ok) {
      const errorBody = await res.text();
      throw new Error(`Failed to fetch from sweph-api: ${res.status} ${errorBody}`);
  }

  const data = await res.json