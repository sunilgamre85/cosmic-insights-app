// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A numerology analysis AI agent.
 *
 * - aiNumerologyAnalysis - A function that handles the numerology analysis process.
 * - AiNumerologyAnalysisInput - The input type for the aiNumerologyAnalysis function.
 * - AiNumerologyAnalysisOutput - The return type for the aiNumerologyAnalysis function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AiNumerologyAnalysisInputSchema = z.object({
  name: z.string().describe('The name of the person.'),
  dateOfBirth: z.string().describe('The date of birth of the person (YYYY-MM-DD).'),
});
export type AiNumerologyAnalysisInput = z.infer<typeof AiNumerologyAnalysisInputSchema>;

const AiNumerologyAnalysisOutputSchema = z.object({
  lifePathNumber: z.number().describe('The life path number.'),
  destinyNumber: z.number().describe('The destiny number.'),
  personalityTraits: z.string().describe('Detailed explanation of personality traits based on numerology.'),
});
export type AiNumerologyAnalysisOutput = z.infer<typeof AiNumerologyAnalysisOutputSchema>;

export async function aiNumerologyAnalysis(input: AiNumerologyAnalysisInput): Promise<AiNumerologyAnalysisOutput> {
  return aiNumerologyAnalysisFlow(input);
}

const prompt = ai.definePrompt({
  name: 'aiNumerologyAnalysisPrompt',
  input: {schema: AiNumerologyAnalysisInputSchema},
  output: {schema: AiNumerologyAnalysisOutputSchema},
  prompt: `You are an expert numerologist. Analyze the numerology of the person based on their name and date of birth.

Name: {{{name}}}
Date of Birth: {{{dateOfBirth}}}

Calculate the life path number and destiny number. Provide a detailed explanation of the personality traits associated with these numbers.

Output:
Life Path Number: (Calculation and result)
Destiny Number: (Calculation and result)
Personality Traits: (Detailed explanation based on the numbers)`, 
});

const aiNumerologyAnalysisFlow = ai.defineFlow(
  {
    name: 'aiNumerologyAnalysisFlow',
    inputSchema: AiNumerologyAnalysisInputSchema,
    outputSchema: AiNumerologyAnalysisOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
