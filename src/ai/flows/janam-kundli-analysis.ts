// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A Janam Kundli analysis AI agent.
 *
 * - janamKundliAnalysis - A function that handles the Janam Kundli analysis process.
 * - JanamKundliAnalysisInput - The input type for the janamKundliAnalysis function.
 * - JanamKundliAnalysisOutput - The return type for the janamKundliAnalysis function.
 */

import {ai} from '@/ai/genkit';
import { getKundliData, getVedicYogasAndDoshas } from '@/lib/astrology-service';
import {z} from 'genkit';

const JanamKundliAnalysisInputSchema = z.object({
  name: z.string().describe('The name of the person.'),
  dateOfBirth: z.string().describe('The date of birth of the person (YYYY-MM-DD).'),
  timeOfBirth: z.string().describe('The time of birth of the person (HH:MM).'),
  placeOfBirth: z.string().describe('The place of birth of the person (e.g., city, region, country).'),
  lat: z.number().optional().describe('Latitude of the place of birth.'),
  lon: z.number().optional().describe('Longitude of the place of birth.'),
});
export type JanamKundliAnalysisInput = z.infer<typeof JanamKundliAnalysisInputSchema>;

const JanamKundliAnalysisOutputSchema = z.object({
    report: z.string().describe('A detailed Janam Kundli report including planetary positions, Lagna, Nakshatra, Dasha periods, and their significance.')
});
export type JanamKundliAnalysisOutput = z.infer<typeof JanamKundliAnalysisOutputSchema>;

export async function janamKundliAnalysis(input: JanamKundliAnalysisInput): Promise<JanamKundliAnalysisOutput> {
  return janamKundliAnalysisFlow(input);
}

const prompt = ai.definePrompt({
  name: 'janamKundliAnalysisPrompt',
  input: {schema: z.any()},
  output: {schema: JanamKundliAnalysisOutputSchema},
  config: {
    temperature: 0.2,
  },
  prompt: `You are an expert Vedic astrologer. Your primary task is to interpret a pre-calculated Janam Kundli (birth chart) and generate a detailed report.

You have been provided with the raw astrological data calculated using the highly accurate Swiss Ephemeris. Do not attempt to recalculate anything. Your task is to act as a professional astrologer and interpret this data for the user.

User Details:
Name: {{{name}}}
Date of Birth: {{{dateOfBirth}}}
Time of Birth: {{{timeOfBirth}}}
Place of Birth: {{{placeOfBirth}}}

Calculated Astrological Data:
- Ascendant (Lagna): {{ascendant.degree}} degrees in {{ascendant.sign}}
- Planetary Positions:
  {{#each planets}}
  - {{this.name}}: {{this.degree}} degrees in {{this.sign}} (in house {{this.house}})
  {{/each}}
- Detected Yogas and Doshas:
  {{#each yogasAndDoshas}}
  - {{this.name}}: {{this.description}}
  {{else}}
  - No major doshas or yogas detected in this preliminary analysis.
  {{/each}}


Based *only* on the provided data, generate a comprehensive Janam Kundli report. The report must include:
1.  A detailed analysis of the Lagna (Ascendant) and its meaning for the person's personality and life.
2.  An interpretation of each planet's position in its respective sign and house, and how it influences various aspects of life.
3.  A detailed section on the detected Yogas or Doshas. For each, explain its implications clearly and calmly. Explain which planetary combination caused it based on the data provided.
4.  Provide a comprehensive analysis of career, health, and relationships based on the chart.
5.  Suggest simple, practical, and non-superstitious remedies if any challenging planetary positions or doshas are found.

Provide a comprehensive, well-structured, and easy-to-understand report. Your goal is to provide a complete astrological analysis based on the given data.`,
});

const janamKundliAnalysisFlow = ai.defineFlow(
  {
    name: 'janamKundliAnalysisFlow',
    inputSchema: JanamKundliAnalysisInputSchema,
    outputSchema: JanamKundliAnalysisOutputSchema,
  },
  async input => {
    // In a real app, you would use a geocoding service to get lat/lon from placeOfBirth
    // For this prototype, we'll use a fixed lat/lon if not provided.
    const lat = input.lat ?? 19.2288; // Default to Kandivali, Mumbai
    const lon = input.lon ?? 72.8540; // Default to Kandivali, Mumbai

    const [year, month, day] = input.dateOfBirth.split('-').map(Number);
    const [hour, minute] = input.timeOfBirth.split(':').map(Number);
    const date = new Date(Date.UTC(year, month - 1, day, hour, minute));

    const kundliData = await getKundliData({ date, lat, lon });
    const yogasAndDoshas = getVedicYogasAndDoshas(kundliData.planets);

    const promptInput = {
        ...input,
        ...kundliData,
        yogasAndDoshas
    };

    const {output} = await prompt(promptInput);
    return output!;
  }
);
